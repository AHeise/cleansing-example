using cleansing;
using udf;

compareParty = fn(party1, party2) { (lower_case(party1) == lower_case(party2) && (party1 != ""))? 1 : 0 };
compareMidName = fn(midName1, midName2) { (midName1 == "" || midName2 == "")? 0.8 : jaroWinkler(midName1,midName2)};
compareYear = fn(year1,year2) { ((year1 && year2) && (year1 == year2)) ? 1 : 0 };

$usCongressPersons = read from '../resources/govwild/output/usCongress_scrubbedPersons.json';
$usCongressPersons = sample $usCongressPersons selectEvery 1;
$FreebaseAdvisors = read from '../resources/govwild/output/FreebaseAdvisors.json';
$FreebaseAdvisors = sample $FreebaseAdvisors selectEvery 1;
$FreebasePoliticians = read from '../resources/govwild/output/Politicians.json';
$FreebasePoliticians = sample $FreebasePoliticians selectEvery 1;

$cluster = link records $usCongressPersons, $FreebasePoliticians
	where  (
		// Names
		(5 * jaroWinkler($usCongressPersons.firstName, $FreebasePoliticians._value.firstName) +		// TODO: Lookup
		5 * jaroWinkler($usCongressPersons.lastName, $FreebasePoliticians._value.lastName) +
		3 * compareMidName($usCongressPersons.middleName, $FreebasePoliticians._value.middleName) +	// TODO: Lookup + Abbreviation 
		// Party
		compareParty($usCongressPersons.worksFor.first.legalEntity, $FreebasePoliticians._value.worksFor.first.legalEntity) +
	
		compareYear($usCongressPersons.worksFor.last.startYear, $FreebasePoliticians._value.worksFor.last.startYear) +
		compareYear($usCongressPersons.worksFor.last.endYear, $FreebasePoliticians._value.worksFor.last.endYear)
				
		// Normalization
		)/16 > 0.95 
	);

//		Threshold = 0.95
//			5 FirstName --> Max(JaroWinkler, LookUp)   LookUp := sim(bill, william) = 1
//			5 LastName --> JaroWinkler
//			3 MiddleName --> 0.8 wenn 1 leer ist und eine source freebase, Max(JaroWinkler, (Lookup == 1 || Abbreviation == true)? 1 : 0)
//			5 Birthday-Month --> own function(==: 1, <>: 1|2, !=: 0)
//			3 Birthyear --> own function(1-Math.abs(b1-b2) / 100)
//			3 Deathyear --> wie Birthyear
//			1 State --> own function(1: states1 intersect states2 != empty)
//			1 Party --> wie State	
	
	
write $cluster to '../resources/govwild/output/cluster.json';
