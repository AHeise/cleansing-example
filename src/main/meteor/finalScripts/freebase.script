using cleansing;
using udf;

//path constants
path = "/home/fabian/Development/Stratosphere/cleansing-example/input/scrub/";
officialTitlesPath = path+"officialTitles.Prefix.dict";

$freebasePoliticians = read from '../../../../input/finalSources/freebasePoliticiansSample.json';
$freebasePartyTenures = read from '../../../../input/finalSources/freebasePartyTenuresSample.json';

$freebasePoliticians_scrubbed = scrub $freebasePoliticians with rules {
	id : [required, type(text), concat_strings("_freebasePolitician")],
	date_of_birth : [required, hasPattern("\d{4}(-\d{2}-\d{2})?"), default(null)],
	date_of_death : [required, hasPattern("\d{4}(-\d{2}-\d{2})?"), default(null)],
	name : [required, normalize_name(officialTitlesPath)]
};

$freebasePartyTenures_scrubbed = scrub $freebasePartyTenures with rules {
	id : [required, type(text), concat_strings("_freebasePartyTenure")],
	from : [required, hasPattern("\d{4}(-\d{2}-\d{2})?"), default(null)],
	to : [required, hasPattern("\d{4}(-\d{2}-\d{2})?"), default(null)],
	politician.id : required,
	party.name : required
};

write $freebasePoliticians_scrubbed to '../../../../output/freebasePoliticianScrubbed.json';
write $freebasePartyTenures_scrubbed to '../../../../output/freebasePartyTenureScrubbed.json';

$freebasePoliticians_extracted, $freebaseParties = transform records $freebasePoliticians_scrubbed, $freebasePartyTenures_scrubbed
where ($freebasePoliticians_scrubbed.id == $freebasePartyTenures_scrubbed.politician.id)
into [
  entity $freebasePoliticians_extracted identified by $freebasePoliticians_scrubbed.id with {
  	_source: "freebase",
  	originals: [$freebasePoliticians_scrubbed.id],
  	firstName: $freebasePoliticians_scrubbed.name[0],
	middleName: $freebasePoliticians_scrubbed.name[1],
	lastName: $freebasePoliticians_scrubbed.name[2],
  	biography: null,
  	birth: $freebasePoliticians_scrubbed.date_of_birth,
  	death: $freebasePoliticians_scrubbed.date_of_death,
  	worksForParty: [
  	       startdate: $freebasePoliticians_scrubbed.government_positions_held.from,
  	       enddate: $freebasePoliticians_scrubbed.government_positions_held.to,
  	       role: $freebasePoliticians_scrubbed.office_position_or_title[0].name,
  	       //TODO too simplifying
  	       party: $freebaseParties.id,
  	       //no state info in freebase
  	       state: null,
  	       congress_numbers: $freebasePoliticians_scrubbed.government_positions_held.legislative_sessions
  	]
  },
  entity $freebaseParties identified by  dict_replace($freebasePartyTenures_scrubbed.politician.name, path, "parties") with {
	source: "freebase",
  	originals: [$freebasePartyTenures_scrubbed.id],
  	name: $freebasePartyTenures_scrubbed.politician.name
  }
];

write $freebasePoliticians_extracted to '../../../../output/freebasePoliticians_extracted.json';
write $freebaseParties to '../../../../output/freebaseParties.json';